package game;

public class Profile {

	//first name of player
	private String FirstName;
	//last name of player
	private String LastName;
	//nick name of player
	private String NickName;
	//age name of player
	private int Age;
	//status of game1 for player
	private boolean Game1;
	//status of score of game 1 for player
	private int Score1;
	//status of game2 for player
	private boolean Game2;
	//status of score of game 2 for player
	private int Score2;
	//status of game1 for player
	private boolean Game3;
	//status of score of game 3 for player
	private int Score3;
	//status of game time for player
	private int GameTime;

	/**
	 * setting the player status
	 * @param firstName first name entered by user
	 * @param lastName last name entered by user
	 * @param nickName nick name entered by user
	 * @param age age name entered by user
	 * @param game1 status of game1 generated by system
	 * @param score1 status of score of game1 generated by system
	 * @param game2 status of game2 generated by system
	 * @param score2 status of score of game2 generated by system
	 * @param game3 status of game3 generated by system
	 * @param score3 status of score of game3 generated by system
	 * @param gameTime status of total game time generated by system
	 */
	public Profile(String firstName, String lastName, String nickName, int age, boolean game1, int score1,
			boolean game2, int score2, boolean game3, int score3, int gameTime) {
		FirstName = firstName;
		LastName = lastName;
		NickName = nickName;
		Age = age;
		Game1 = game1;
		Score1 = score1;
		Game2 = game2;
		Score2 = score2;
		Game3 = game3;
		Score3 = score3;
		GameTime = gameTime;
	}

	//get full name of player
	public String getFullName() {
		return FirstName + " " + LastName;
	}
	//get first name of player
	public String getFirstName() {
		return FirstName;
	}
	//get last name of player
	public String getLastName() {
		return LastName;
	}
	//get nick name of player
	public String getNickName() {
		return NickName;
	}
	//get age of player
	public int getAge() {
		return Age;
	}

	// Note: Returns False if input is invalid
	public boolean getGameStatus(int gameNumber) {
		if (gameNumber == 1) {
			return Game1;
		} else if (gameNumber == 2) {
			return Game2;
		} else if (gameNumber == 3) {
			return Game3;
		} else {
			return false;
		}
	}
	
	/**
	 * setting game status of player
	 * @param gameNumber which game player is played
	 * @param finished indicates whether gameNumber game is completed or not
	 * @return true if finished, false otherwise
	 */
	public boolean setGameStatus(int gameNumber, boolean finished) {
		if (gameNumber == 1) {
			Game1 = finished;
			return true;
		} else if (gameNumber == 2) {
			Game2 = finished;
			return true;
		} else if (gameNumber == 3) {
			Game3 = finished;
			return true;
		} else {
			// Invalid game number Input
			return false;
		}
	}
	
	
	/**
	 * getting the score of game for player
	 * @param gameNumber indicated which game player is playing
	 * @return score of current game, -1 if not applicable
	 */
	public int getGameScore(int gameNumber) {
		if (gameNumber == 1) {
			return Score1;
		} else if (gameNumber == 2) {
			return Score2;
		} else if (gameNumber == 3) {
			return Score3;
		} else {
			return -1;
		}
	}

	/**
	 * setting game score for player
	 * @param gameNumber which game player is playing
	 * @param score score of current game
	 * @return true is score is set, false otherwise
	 */
	public boolean setGameScore(int gameNumber, int score) {
		if (gameNumber == 1) {
			Score1 = score;
			return true;
		} else if (gameNumber == 2) {
			Score2 = score;
			return true;
		} else if (gameNumber == 3) {
			Score3 = score;
			return true;
		} else {
			// Invalid game number Input
			return false;
		}
	}

	//return game time
	public int getGameTime() {
		return GameTime;
	}
	//set game time
	public void setGameTime(int gameTime) {
		GameTime = gameTime;
	}

}
